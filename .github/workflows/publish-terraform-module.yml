name: Publish Terraform Module

on:
  push:
    branches:
      - main
    paths: 
      - 'modules/**'   
  workflow_dispatch:

jobs:
  detect_and_publish:
    name: Detect Changes and Publish Module
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect Changed Modules
        id: changes
        run: |
          CHANGED_MODULES=$(git diff --name-only HEAD^ | grep '^modules/' | cut -d'/' -f2 | sort -u)
          echo "Changed modules: $CHANGED_MODULES"
          echo "$CHANGED_MODULES" >> changed_modules.txt

      - name: Exit if no changes detected
        if: steps.changes.outputs.CHANGED_MODULES == ''
        run: echo "No changes detected in the modules folder. Exiting."

      - name: Get Latest Module Version (if exists)
        id: get_version
        run: |
          for module in $(cat changed_modules.txt); do
            LATEST_TAG=$(git tag --list "${module}-v*" --sort=-v:refname | head -n1)
            if [ -n "$LATEST_TAG" ]; then
              VERSION=${LATEST_TAG#"$module-v"} 
              echo "$module=$VERSION" >> module_versions.txt
            else
              echo "$module=0.0.0" >> module_versions.txt
            fi
          done

      - name: Bump Module Versions
        id: bump_version
        uses: haya14busa/action-bumpr@v1
        with:
          bump_each_file: true
          files: module_versions.txt
          format: "${module}-v${version}"
          default_bump_level: patch  

      - name: Publish Modules
        run: |
          for module in $(cat changed_modules.txt); do
            NEW_TAG=$(grep "^${module}=" module_versions.txt | cut -d= -f2)

            # Create release and upload archive
            gh release create "$NEW_TAG" \
              "modules/${module}" \
              --title "Module Release $NEW_TAG" \
              --notes "Release for module $module"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
