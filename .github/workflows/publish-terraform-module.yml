name: Publish Terraform Module

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  detect_and_publish:
    name: Detect Changes and Publish Module
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetching the full history

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Detect Changed Modules
        id: changes
        run: |
          CHANGED_MODULES=$(git diff --name-only HEAD~1 HEAD | grep '^modules/' | cut -d'/' -f2 | sort -u)
          echo "Changed modules: $CHANGED_MODULES"
          echo "changed_modules=$CHANGED_MODULES" >> $GITHUB_ENV

      - name: Fail if no changes detected
        if: env.changed_modules == ''
        run: |
          echo "No changes detected in the modules folder. Exiting."
          exit 1

      - name: Compress Changed Modules
        if: env.changed_modules != ''
        run: |
          for module in ${{ env.changed_modules }}; do
            cd modules/$module
            tar -czvf $module.tar.gz *
            cd ../..
          done

      - name: Create GitHub Release
        if: env.changed_modules != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: "v1.0.0-${{ env.changed_modules }}"
          release_name: "Module ${{ env.changed_modules }} Release"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        if: env.changed_modules != ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: modules/${{ env.changed_modules }}/module.tar.gz
          asset_name: module-${{ env.changed_modules }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
