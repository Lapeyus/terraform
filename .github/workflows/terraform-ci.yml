name: Terraform CI

on:
  push:
    branches-ignore:
      - main
    paths:
      - "modules/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Changed Modules
        id: changes
        run: |
          git fetch origin main:refs/remotes/origin/main
          git diff --name-only origin/main...HEAD | grep '^modules/' | cut -d'/' -f2 | sort -u > changed_modules.txt
          echo "Changed modules: $(cat changed_modules.txt)" 

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Cache Terraform modules
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/modules
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-
          
      - name: Terraform Init, Validate, and Format Check
        run: |
          while read -r module; do
            echo "Processing module: modules/$module"
            terraform -chdir="modules/$module" init -upgrade
            terraform -chdir="modules/$module" validate
            terraform -chdir="modules/$module" fmt -check
          done < changed_modules.txt

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: Run TFLint
        run: |
          while read -r module; do
            echo "Running TFLint on module: modules/$module"
            tflint --chdir="modules/$module" -f compact
          done < changed_modules.txt
          
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        if: steps.changes.outputs.changed_modules != '[]'
        with:
          directory: modules/${{ join(fromJSON(steps.changes.outputs.changed_modules), ',modules/') }} 
          framework: terraform
          download_external_modules: true

