name: Terraform CI

on:
  push:
    branches-ignore:
      - main
    paths:
      - "modules/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_VERSION: 1.9.2
      TFLINT_VERSION: v0.52.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Modules
        id: changes
        run: |
          CHANGED_MODULES=$(git diff --name-only HEAD~1 HEAD | grep '^modules/' | cut -d'/' -f2 | sort -u)
          echo "Changed modules: $CHANGED_MODULES"
          echo "$CHANGED_MODULES" > changed_modules.txt

      - name: Exit if no changes detected
        run: |
          if [ ! -s changed_modules.txt ]; then
            echo "No changes detected in the modules folder. Exiting."
            exit 0
          fi

      - name: Debug Changed Modules
        run: |
          echo "Changed modules:"
          cat changed_modules.txt

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Cache Terraform modules
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugins
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: Terraform Init, Validate, and Format Check
        run: |
          while read -r module; do
            echo "Processing module: modules/$module"
            terraform -chdir="modules/$module" init -upgrade
            terraform -chdir="modules/$module" validate || { echo "Terraform validate failed for $module"; exit 1; }
            terraform -chdir="modules/$module" fmt -check || { echo "Terraform fmt check failed for $module"; exit 1; }
          done < changed_modules.txt

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Run TFLint
        run: |
          while read -r module; do
            echo "Running TFLint on module: modules/$module"
            tflint --chdir="modules/$module" -f compact || { echo "TFLint failed for $module"; exit 1; }
          done < changed_modules.txt

    #   - name: Run Checkov
    #     run: |
    #       while read -r module; do
    #         echo "Running Checkov on modules/$module"
    #         checkov --directory "modules/$module" --framework terraform --download-external-modules true || { echo "Checkov failed for $module"; exit 1; }
    #       done < changed_modules.txt

      - name: Run Terraform Tests
        run: |
          while read -r module; do
            echo "Running Terraform tests on modules/$module"
            terraform test -test-directory "modules/$module/test" || { echo "Terraform tests failed for $module"; exit 1; }
          done < changed_modules.txt
