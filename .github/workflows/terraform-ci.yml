name: Terraform CI

on:
  push:
    branches-ignore:
      - main
    paths:
      - "modules/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for detecting changes

      - name: Detect Changed Modules
        id: changes
        run: |
          CHANGED_MODULES=$(git diff --name-only HEAD~1 HEAD | grep '^modules/' | cut -d'/' -f2 | sort -u)
          echo "Changed modules: $CHANGED_MODULES"
          echo "$CHANGED_MODULES" > changed_modules.txt

      - name: Exit if no changes detected
        run: |
          if [ ! -s changed_modules.txt ]; then
            echo "No changes detected in the modules folder. Exiting."
            exit 0
          fi

      - name: Debug Changed Modules
        run: |
          echo "Changed modules:"
          cat changed_modules.txt

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Cache Terraform modules
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/modules
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-
          
      - name: Terraform Init, Validate, and Format Check
        run: |
          while read -r module; do
            echo "Processing module: modules/$module"
            terraform -chdir="modules/$module" init -upgrade
            terraform -chdir="modules/$module" validate || { echo "Terraform validate failed for $module"; exit 1; }
            terraform -chdir="modules/$module" fmt -check || { echo "Terraform fmt check failed for $module"; exit 1; }
          done < changed_modules.txt

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: Run TFLint
        run: |
          while read -r module; do
            echo "Running TFLint on module: modules/$module"
            tflint --chdir="modules/$module" -f compact || { echo "TFLint failed for $module"; exit 1; }
          done < changed_modules.txt

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        directory: ./modules/  # Scan all modules in the modules directory
          #file: example/tfplan.json  # Remove this line if you are not providing a plan file
          #check:  # Remove this line if you are not specifying a specific check
          #skip_check:  # Remove this line if you are not skipping a specific check
          #quiet: true  # Remove this line if you want to see all results, not just failures
          soft_fail: true  # Do not fail the workflow if Checkov finds issues
          framework: terraform  # Explicitly specify Terraform as the framework
          #skip_framework:  # Remove this line unless you need to skip a framework
          #skip_cve_package:  # Remove this line unless you need to skip specific CVEs
          output_format: cli  # Output the results in the command-line format for easy reading
          #output_file_path:  # Remove this line if you don't need a separate output file
          #output_bc_ids:  # Remove this line if you don't use Bridgecrew IDs
          #download_external_modules:  # Remove this line if you don't need external modules downloaded
          #repo_root_for_plan_enrichment:  # Remove this line if you are not providing a plan file
          #var_file:  # Remove this line if you don't have additional variable files
          #log_level:  # Remove this line unless you need to change the log level
          #config_file:  # Remove this line unless you have a custom config file
          #baseline:  # Remove this line unless you have a baseline file
          #container_user:  # Remove this line unless you have specific permissions requirements
          #use_enforcement_rules: true # Remove this line unless you use Bridgecrew enforcement rules
    
          #     run: pip install checkov

    #   - name: Run Checkov
    #     run: |
    #       while read -r module; do
    #         echo "Running Checkov on modules/$module"
    #         checkov --directory "modules/$module" --framework terraform --download-external-modules true || { echo "Checkov failed for $module"; exit 1; }
    #       done < changed_modules.txt
